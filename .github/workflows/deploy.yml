name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix['node-version'] }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Migrate database
        run: npx prisma migrate deploy

      - name: Build application
        run: npm run build

      - name: Deploy application files
        run: |
          DEPLOY_DIR="/opt/ec-2-test"
          sudo mkdir -p "$DEPLOY_DIR"
          pm2 stop backend 2>/dev/null || echo "App not running"
          # Copy the entire dist folder so structure is preserved
          sudo cp -r ./dist "$DEPLOY_DIR/"
          sudo cp package.json package-lock.json "$DEPLOY_DIR/"
          sudo chown -R $USER:$USER "$DEPLOY_DIR"
          echo "Application files deployed to $DEPLOY_DIR"

      - name: Create backend .env file
        run: |
          echo "${{ secrets.PROD_BACKEND_ENV }}" > /opt/ec-2-test/.env
          sudo chown $USER:$USER /opt/ec-2-test/.env

      - name: Install production dependencies
        run: |
          cd /opt/ec-2-test
          npm ci --only=production
          echo "Production dependencies installed"

      - name: Start or restart backend with PM2
        run: |
          cd /opt/ec-2-test
          if pm2 describe backend > /dev/null 2>&1; then
            pm2 restart backend
            echo "Backend restarted"
          else
            pm2 start dist/server.js --name backend
            echo "Backend started"
          fi
          pm2 save
