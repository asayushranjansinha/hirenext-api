name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix['node-version'] }}
          cache: 'npm'

      # Install all deps (including dev) so prisma CLI & tools are available
      - name: Install dependencies
        run: npm ci

      # Create .env in the repo workspace so Prisma reads it during generate/migrate
      - name: Create workspace .env from secret
        env:
          PROD_BACKEND_ENV: ${{ secrets.PROD_BACKEND_ENV }}
        run: |
          if [ -z "$PROD_BACKEND_ENV" ]; then
            echo "ERROR: PROD_BACKEND_ENV secret is empty"
            exit 1
          fi
          printf '%s\n' "$PROD_BACKEND_ENV" > .env
          echo ".env created in workspace"

      # Generate client before build so TypeScript/JS build can import @prisma/client
      - name: Generate Prisma Client
        run: npx prisma generate

      # Build the application (this will pick up generated client if needed)
      - name: Build application
        run: npm run build

      # Run migrations against production DB
      - name: Migrate database (production)
        run: npx prisma migrate deploy

      # Deploy built files to server path
      - name: Deploy application files
        run: |
          DEPLOY_DIR="/opt/ec-2-test"
          sudo mkdir -p "$DEPLOY_DIR"
          pm2 stop backend 2>/dev/null || echo "App not running"
          # copy built files, package files, AND generated prisma client
          sudo cp -r ./dist "$DEPLOY_DIR/"
          sudo cp package.json package-lock.json "$DEPLOY_DIR/"
          sudo cp -r ./node_modules/@prisma "$DEPLOY_DIR/node_modules/" || echo "Creating node_modules dir first"
          sudo mkdir -p "$DEPLOY_DIR/node_modules"
          sudo cp -r ./node_modules/@prisma "$DEPLOY_DIR/node_modules/"
          sudo chown -R $(whoami):$(whoami) "$DEPLOY_DIR"
          echo "Application files deployed to $DEPLOY_DIR"

      # Copy .env to the deploy dir for the runtime
      - name: Create backend .env in deploy dir
        env:
          PROD_BACKEND_ENV: ${{ secrets.PROD_BACKEND_ENV }}
        run: |
          DEPLOY_DIR="/opt/ec-2-test"
          printf '%s\n' "$PROD_BACKEND_ENV" > /tmp/.env_prod
          sudo mv /tmp/.env_prod "$DEPLOY_DIR/.env"
          sudo chown $(whoami):$(whoami) "$DEPLOY_DIR/.env"
          echo ".env copied to $DEPLOY_DIR/.env"

      # Install only production dependencies inside the deploy directory
      - name: Install production dependencies
        run: |
          cd /opt/ec-2-test
          npm ci --only=production
          echo "Production dependencies installed"

      # Start or restart the app with PM2
      - name: Start or restart backend with PM2
        run: |
          cd /opt/ec-2-test
          if pm2 describe backend > /dev/null 2>&1; then
            pm2 restart backend
            echo "Backend restarted"
          else
            pm2 start dist/server.js --name backend
            echo "Backend started"
          fi
          pm2 save
